searchState.loadedDescShard("lib", 0, "Assertables: Rust crate of assert macros for testing\nAssert a condition is true.\nAssert for comparing absolute differences.\nAssert an absolute difference is equal to a delta …\nAssert an absolute difference is equal to a delta …\nAssert an absolute difference is greater than or equal to …\nAssert an absolute difference is greater than or equal to …\nAssert an absolute difference is greater than a delta …\nAssert an absolute difference is greater than a delta …\nAssert an absolute difference is less than or equal to a …\nAssert an absolute difference is less than or equal to a …\nAssert an absolute difference is less than a delta …\nAssert an absolute difference is less than a delta …\nAssert an absolute difference is not equal to a delta …\nAssert an absolute difference is not equal to a delta …\nAssert every element of the iterator matches a predicate.\nAssert every element of the iterator matches a predicate.\nAssert every element of the iterator matches a predicate.\nAssert every element of the iterator matches a predicate.\nAssert every element of the iterator matches a predicate.\nAssert every element of the iterator matches a predicate.\nAssert for approximations.\nAssert a number is approximately equal to another number.\nAssert a number is approximately equal to another number.\nAssert a number is approximately not equal to another …\nAssert a number is approximately not equal to another …\nAssert a condition is true.\nAssert for comparing bag collections.\nAssert a bag is equal to another.\nAssert a bag is equal to another.\nAssert bag implementation preparation.\nAssert a bag is not equal to another.\nAssert a bag is not equal to another.\nAssert a bag is a subbag of another.\nAssert a bag is a subbag of another.\nAssert a bag is a superbag of another.\nAssert a bag is a superbag of another.\nAssert for comparing commands and their stdout &amp; stderr.\nAssert a command stderr string contains a given containee.\ninto <code>assert_command_stderr_string_contains</code>. Assert a …\nAssert a command stderr string is equal to another.\nAssert a command stderr string is equal to another.\nAssert a command stderr string is equal to an expression.\nAssert a command stderr string is equal to an expression.\nAssert a command stderr string is equal to another.\nAssert a command stderr string is equal to another.\nAssert a command stderr string is equal to an expression.\nAssert a command stderr string is equal to an expression.\nAssert a command stderr string is equal to another.\nAssert a command stderr string is equal to another.\nAssert a command stderr string is equal to an expression.\nAssert a command stderr string is equal to an expression.\nAssert a command stderr string is a match to a regex.\nAssert a command stderr string is a match to a regex.\nAssert a command stderr string is equal to another.\nAssert a command stderr string is equal to another.\nAssert a command stderr string is equal to an expression.\nAssert a command stderr string is equal to an expression.\nAssert a command stderr string is equal to another.\nAssert a command stderr string is equal to another.\nAssert a command stderr string is equal to an expression.\nAssert a command stderr string is equal to an expression.\nAssert a command stderr string is equal to another.\nAssert a command stderr string is equal to another.\nAssert a command stderr string is equal to an expression.\nAssert a command stderr string is equal to an expression.\nAssert a command stderr string contains a given containee.\nAssert a command stderr string contains a given containee.\nAssert a command stderr string is a match to a regex.\nAssert a command stderr string is a match to a regex.\nAssert a command stdout string contains a given containee.\nAssert a command stdout string contains a given containee.\nAssert a command stdout string is equal to another.\nAssert a command stdout string is equal to another.\nAssert a command stdout string is equal to an expression.\nAssert a command stdout string is equal to an expression.\nAssert a command stdout string is equal to another.\nAssert a command stdout string is equal to another.\nAssert a command stdout string is equal to an expression.\nAssert a command stdout string is equal to an expression.\nAssert a command stdout string is equal to another.\nAssert a command stdout string is equal to another.\nAssert a command stdout string is equal to an expression.\nAssert a command stdout string is equal to an expression.\nAssert a command stdout string is a match to a regex.\nAssert a command stdout string is a match to a regex.\nAssert a command stdout string is equal to another.\nAssert a command stdout string is equal to another.\nAssert a command stdout string is equal to an expression.\nAssert a command stdout string is equal to an expression.\nAssert a command stdout string is equal to another.\nAssert a command stdout string is equal to another.\nAssert a command stdout string is equal to an expression.\nAssert a command stdout string is equal to an expression.\nAssert a command stdout string is equal to another.\nAssert a command stdout string is equal to another.\nAssert a command stdout string is equal to an expression.\nAssert a command stdout string is equal to an expression.\nAssert a command stdout string contains a given containee.\nAssert a command stdout string contains a given containee.\nAssert a command stdout string is a match to a regex.\nAssert a command stdout string is a match to a regex.\nAssert for a container and a containee.\nAssert a container is a match for an expression.\nAssert an expression (such as a string) contains an …\nAssert for comparing counts.\nAssert a count is equal to another count.\nAssert a count is equal to another count.\nAssert a count is equal to an expression.\nAssert a count is equal to an expression.\nAssert a count is greater than or equal to another count.\nAssert a count is greater than or equal to another count.\nAssert a count is greater than or equal to an expression.\nAssert a count is greater than or equal to an expression.\nAssert a count is greater than another count.\nAssert a count is greater than another count.\nAssert a count is greater than an expression.\nAssert a count is greater than an expression.\nAssert a count is less than or equal to another count.\nAssert a count is less than or equal to another count.\nAssert a count is less than or equal to an expression.\nAssert a count is less than or equal to an expression.\nAssert a count is less than another count.\nAssert a count is less than another count.\nAssert a count is less than an expression.\nAssert a count is less than an expression.\nAssert a count is equal to another count.\nAssert a count is equal to another count.\nAssert a count is equal to an expression.\nAssert a count is equal to an expression.\nAssert for a whole that may end with a part.\nAssert an expression (such as a string) ends with an …\nAssert an expression (such as a string) ends with an …\nAssert an expression is equal to another expression.\nAssert an expression is equal to another expression.\nAssert for Err(…) items.\nAssert expression is Err.\nAssert expression is Err.\nAssert two expressions are Err and their values are equal.\nAssert two expressions are Err and their values are equal.\nAssert an expression is Err and its value is equal to an …\nAssert an expression is Err and its value is equal to an …\nAssert two expressions are Err and their values are not …\nAssert two expressions are Err and their values are not …\nAssert an expression is Err and its value is equal to an …\nAssert an expression is Err and its value is equal to an …\nAssert for comparing functions.\nAssert a function output is equal to another function …\nAssert a function output is equal to another function …\nAssert a function output is equal to an expression.\nAssert a function output is equal to an expression.\nAssert for comparing functions that return errors.\nAssert a function error is equal to another.\nAssert a function error is equal to another.\nAssert a function error is equal to an expression.\nAssert a function error is equal to an expression.\nAssert a function error is greater than or equal to …\nAssert a function error is greater than or equal to …\nAssert a function error is greater than or equal to an …\nAssert a function error is greater than or equal to an …\nAssert a function error is greater than another.\nAssert a function error is greater than another.\nAssert a function error is greater than an expression.\nAssert a function error is greater than an expression.\nAssert a function error is less than or equal to another.\nAssert a function error is less than or equal to another.\nAssert a function error is less than or equal to an …\nAssert a function error is less than or equal to an …\nAssert a function error is less than another.\nAssert a function error is less than another.\nAssert a function error is less than an expression.\nAssert a function error is less than an expression.\nAssert a function error is not equal to another.\nAssert a function error is not equal to another.\nAssert a function error is not equal to an expression.\nAssert a function error is not equal to an expression.\nAssert a function output is greater than or equal to …\nAssert a function output is greater than or equal to …\nAssert a function output is greater than or equal to an …\nAssert a function output is greater than or equal to an …\nAssert a function output is greater than another.\nAssert a function output is greater than another.\nAssert a function output is greater than an expression.\nAssert a function output is greater than an expression.\nAssert a function output is less than or equal to another.\nAssert a function output is less than or equal to another.\nAssert a function output is less than or equal to an …\nAssert a function output is less than or equal to an …\nAssert a function output is less than another.\nAssert a function output is less than another.\nAssert a function output is less than an expression.\nAssert a function output is less than an expression.\nAssert a function output is not equal to another.\nAssert a function output is not equal to another.\nAssert a function output is not equal to an expression.\nAssert a function output is not equal to an expression.\nAssert for comparing functions that return Result::Ok.\nAssert a function Ok(…) is equal to another.\nAssert a function Ok(…) is equal to another.\nAssert a function Ok(…) is equal to an expression.\nAssert a function Ok(…) is equal to an expression.\nAssert a function Ok(…) is greater than or equal to …\nAssert a function Ok(…) is greater than or equal to …\nAssert a function Ok(…) is greater than or equal to an …\nAssert a function Ok(…) is greater than or equal to an …\nAssert a function Ok(…) is greater than another.\nAssert a function Ok(…) is greater than another.\nAssert a function Ok(…) is greater than an expression.\nAssert a function Ok(…) is greater than an expression.\nAssert a function Ok(…) is less than or equal to another.\nAssert a function Ok(…) is less than or equal to another.\nAssert a function Ok(…) is less than or equal to an …\nAssert a function Ok(…) is less than or equal to an …\nAssert a function Ok(…) is less than another.\nAssert a function Ok(…) is less than another.\nAssert a function Ok(…) is less than an expression.\nAssert a function Ok(…) is less than an expression.\nAssert a function Ok(…) is not equal to another.\nAssert a function Ok(…) is not equal to another.\nAssert a function Ok(…) is not equal to an expression.\nAssert a function Ok(…) is not equal to an expression.\nAssert for comparing file system path contents.\nAssert a ::std::fs::read_to_string(path) contains a …\nAssert a ::std::fs::read_to_string(path) contains a …\nAssert a ::std::fs::read_to_string(path) value is equal to …\nAssert a ::std::fs::read_to_string(path) is equal to …\nAssert a ::std::fs::read_to_string(path) value is equal to …\nAssert a ::std::fs::read_to_string(path) value is equal to …\nAssert a ::std::fs::read_to_string(path) value is greater …\nAssert a ::std::fs::read_to_string(path) value is greater …\nAssert a ::std::fs::read_to_string(path) value is greater …\nAssert a ::std::fs::read_to_string(path) value is greater …\nAssert a ::std::fs::read_to_string(path) value is greater …\nAssert a ::std::fs::read_to_string(path) value is greater …\nAssert a ::std::fs::read_to_string(path) value is greater …\nAssert a ::std::fs::read_to_string(path) value is greater …\nAssert a ::std::fs::read_to_string(path) is a match to a …\nAssert a ::std::fs::read_to_string(path) is a match to a …\nAssert a ::std::fs::read_to_string(path) value is less …\nAssert a ::std::fs::read_to_string(path) value is less …\nAssert a ::std::fs::read_to_string(path) value is less …\nAssert a ::std::fs::read_to_string(path) value is less …\nAssert a ::std::fs::read_to_string(path) value is less …\nAssert a ::std::fs::read_to_string(path) value is less …\nAssert a ::std::fs::read_to_string(path) value is less …\nAssert a ::std::fs::read_to_string(path) value is less …\nAssert a ::std::fs::read_to_string(path) is a match to a …\nAssert a ::std::fs::read_to_string(path) is a match to a …\nAssert a ::std::fs::read_to_string(path) is not equal to …\nAssert a ::std::fs::read_to_string(path) is not equal to …\nAssert a ::std::fs::read_to_string(path) is not equal to …\nAssert a ::std::fs::read_to_string(path) is not equal to …\nAssert an expression is greater than or equal to another …\nAssert an expression is greater than or equal to another …\nAssert an expression is greater than or equal to another …\nAssert an expression is greater than another expression.\nAssert an expression is greater than another expression.\nAssert an expression is greater than another expression.\nAssert in nearness.\nAssert a number is within delta of another number.\nAssert a number is within delta of another number.\nAssert a number is within epsilon of another number.\nAssert a number is within epsilon of another number.\nAssert a infix operator, such as assert_infix!(a == b).\nAssert a infix operator, such as assert_infix!(a == b).\nAssert a infix operator, such as assert_infix!(a == b).\nAssert for comparing input/output reader streams.\nAssert a ::std::io::Read read_to_string() contains a …\nAssert a ::std::io::Read read_to_string() contains a …\nAssert a ::std::io::Read read_to_string() value is equal …\nAssert a ::std::io::Read read_to_string() is equal to …\nAssert a ::std::io::Read read_to_string() value is equal …\nAssert a ::std::io::Read read_to_string() value is equal …\nAssert a ::std::io::Read read_to_string() value is greater …\nAssert a ::std::io::Read read_to_string() value is greater …\nAssert a ::std::io::Read read_to_string() value is greater …\nAssert a ::std::io::Read read_to_string() value is greater …\nAssert a ::std::io::Read read_to_string() value is greater …\nAssert a ::std::io::Read read_to_string() value is greater …\nAssert a ::std::io::Read read_to_string() value is greater …\nAssert a ::std::io::Read read_to_string() value is greater …\nAssert a ::std::io::Read read_to_string() is a match to a …\nAssert a ::std::io::Read read_to_string() is a match to a …\nAssert a ::std::io::Read read_to_string() value is less …\nAssert a ::std::io::Read read_to_string() value is less …\nAssert a ::std::io::Read read_to_string() value is less …\nAssert a ::std::io::Read read_to_string() value is less …\nAssert a ::std::io::Read read_to_string() value is less …\nAssert a ::std::io::Read read_to_string() value is less …\nAssert a ::std::io::Read read_to_string() value is less …\nAssert a ::std::io::Read read_to_string() value is less …\nAssert a ::std::io::read_to_string(path) is a match to a …\nAssert a ::std::io::read_to_string(path) is a match to a …\nAssert a ::std::io::Read read_to_string() is not equal to …\nAssert a ::std::io::Read read_to_string() is not equal to …\nAssert a ::std::io::Read read_to_string() is not equal to …\nAssert a ::std::io::Read read_to_string() is not equal to …\nAssert for method is_empty().\nAssert an expression (such as a string or array) is empty.\nAssert an expression (such as a regex) is a match for an …\nAssert for method is_match(…).\nAssert a matcher is a match for an expression.\nAssert an expression (such as a regex) is a match for an …\nAssert for comparing iter collections.\nAssert an iterable is equal to another.\nAssert an iterable is equal to another.\nAssert an iterable is greater than or equal to another.\nAssert an iterable is greater than or equal to another.\nAssert an iterable is greater than another.\nAssert an iterable is greater than another.\nAssert an iterable is less than or equal to another.\nAssert an iterable is less than or equal to another.\nAssert an iterable is less than another.\nAssert an iterable is less than another.\nAssert an iterable is not equal to another.\nAssert an iterable is not equal to another.\nAssert an expression is less than or equal to another …\nAssert an expression is less than or equal to another …\nAssert an expression is less than or equal to another …\nAssert for comparing lengths.\nAssert a length is equal to another length.\nAssert a length is equal to another length.\nAssert a length is equal to an expression.\nAssert a length is equal to an expression.\nAssert a length is greater than or equal to another length.\nAssert a length is greater than or equal to another length.\nAssert a length is greater than or equal to an expression.\nAssert a length is greater than or equal to an expression.\nAssert a length is greater than another length.\nAssert a length is greater than another length.\nAssert a length is greater than an expression.\nAssert a length is greater than an expression.\nAssert a length is less than or equal to another length.\nAssert a length is less than or equal to another length.\nAssert a length is less than or equal to an expression.\nAssert a length is less than or equal to an expression.\nAssert a length is less than another length.\nAssert a length is less than another length.\nAssert a length is less than an expression.\nAssert a length is less than an expression.\nAssert a length is equal to another length.\nAssert a length is equal to another length.\nAssert a length is equal to an expression.\nAssert a length is equal to an expression.\nAssert an expression is less than another expression.\nAssert an expression is less than another expression.\nAssert an expression is less than another expression.\nAssert matches for verifying an item matches a condition.\nAssert expression is Some.\nAssert expression matches a case.\nAssert an expression is not equal to another expression.\nAssert an expression is not equal to another expression.\nAssert for None items.\nAssert expression is None.\nAssert an expression is None.\nAssert an expression (such as a string) does not contain …\nAssert an expression (such as a string) does not contain …\nAssert an expression (such as a string or array) is not …\nAssert an expression (such as a string or array) is not …\nAssert an expression (such as a string) does not end with …\nAssert an expression (such as a string) does not end with …\nAssert an expression (such as a regex) is not a match for …\nAssert an expression (such as a regex) is not a match for …\nAssert expression is Some.\nAssert expression matches a case.\nAssert an expression (such as a string) does not start …\nAssert an expression (such as a string) does not start …\nAssert for Ok(…) items.\nAssert expression is Ok.\nAssert expression is Ok.\nAssert two expressions are Ok and their values are equal.\nAssert two expressions are Ok and their values are equal.\nAssert an expression is Ok and its value is equal to an …\nAssert an expression is Ok and its value is equal to an …\nAssert two expressions are Ok and their values are not …\nAssert two expressions are Ok and their values are not …\nAssert an expression is Ok and its value is equal to an …\nAssert an expression is Ok and its value is equal to an …\nAssert for <code>Option</code> {<code>Some</code>, <code>None</code>}\nAssert expression is None.\nAssert expression is None.\nAssert expression is Some.\nAssert expression is Some.\nAssert two expressions are Some and their values are equal.\nAssert two expressions are Some and their values are equal.\nAssert two expressions are Some and their values are not …\nAssert two expressions are Some and their values are not …\nAssert for Pending items.\nAssert an expression is Pending.\nAssert an expression.is_pending() is true.\nAssert for <code>Poll</code> {<code>Ready</code>, <code>Pending</code>}\nAssert an expression is Pending.\nAssert an expression.is_pending() is true.\nAssert an expression is Ready.\nAssert an expression is Ready.\nAssert two expressions are Ready(_) and their values are …\nAssert two expressions are Ready(_) and their values are …\nAssert two expressions are Ready(_) and their values are …\nAssert two expressions are Ready(_) and their values are …\nAssert for comparing lengths.\nAssert a process status code value is equal to another.\nAssert a process status code value is equal to another.\nAssert a process status code value is equal to an …\nAssert a process status code value is equal to an …\nAssert a process status code value is greater than or …\nAssert a process status code value is greater than or …\nAssert a process status code value is greater than or …\nAssert a process status code value is greater than or …\nAssert a process status code value is greater than another.\nAssert a process status code value is greater than another.\nAssert a process status code value is greater than an …\nAssert a process status code value is greater than an …\nAssert a process status code value is less than or equal …\nAssert a process status code value is less than or equal …\nAssert a process status code value is less than or equal …\nAssert a process status code value is less than or equal …\nAssert a process status code value is less than another.\nAssert a process status code value is less than another.\nAssert a process status code value is less than an …\nAssert a process status code value is less than an …\nAssert a process status code value is not equal to another.\nAssert a process status code value is not equal to another.\nAssert a process status code value is equal to another.\nAssert a process status code value is equal to another.\nAssert for comparing programs with arguments.\nAssert program args implementation preparation.\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert for Ready(_) items.\nAssert an expression is Ready.\nAssert an expression is Ready.\nAssert two expressions are Ready and their values are …\nAssert two expressions are Ready and their values are …\nAssert an expression is Ready and its value is equal to an …\nAssert an expression is Ready and its value is equal to an …\nAssert two expressions are Ready and their values are not …\nAssert two expressions are Ready and their values are not …\nAssert an expression is Ready and its value is not equal …\nAssert an expression is Ready and its value is not equal …\nAssert for <code>Result</code> {<code>Ok</code>, <code>Err</code>}\nAssert expression is Err.\nAssert expression is Err.\nAssert expression is Ok.\nAssert expression is Ok.\nAssert two expressions are Ok and their values are equal.\nAssert two expressions are Ok and their values are equal.\nAssert two expressions are Ok and their values are not …\nAssert two expressions are Ok and their values are not …\nAssert for comparing set collections.\nAssert a set is disjoint with another.\nAssert a set is disjoint with another.\nAssert a set is equal to another.\nAssert a set is equal to another.\nAssert set implementation preparation.\nAssert a set is joint with another.\nAssert a set is joint with another.\nAssert a set is not equal to another.\nAssert a set is not equal to another.\nAssert a set is a subset of another.\nAssert a set is a subset of another.\nAssert a set is a superset of another.\nAssert a set is a superset of another.\nAssert for Some(_) items.\nAssert expression is Some.\nAssert an expression.is_some() is true.\nAssert two expressions are Some and their values are equal.\nPseudocode: (a ⇒ Some(a1) ⇒ a1) = (b ⇒ Some(b1) ⇒ …\nAssert an expression is Some and its value is equal to an …\nAssert a.is_some() and a.unwrap() are equal to another.\nAssert two expressions are Some and their values are not …\nAssert two expressions are Some and their values are not …\nAssert an expression is Some and its value is not equal to …\nAssert a.is_some() and a.unwrap() are equal to another.\nAssert for a whole that may start with a part.\nAssert an expression (such as a string) starts with an …\nAssert an expression (such as a string) starts with an …\nAssert an absolute difference is equal to a delta …\nAssert an absolute difference is greater than or equal to …\nAssert an absolute difference is greater than a delta …\nAssert an absolute difference is less than or equal to a …\nAssert an absolute difference is less than a delta …\nAssert an absolute difference is not equal to a delta …\nAssert every element of the iterator matches a predicate.\nAssert every element of the iterator matches a predicate.\nAssert a number is approximately equal to another number.\nAssert a number is approximately not equal to another …\nAssert a bag is equal to another.\nAssert a bag is not equal to another.\nAssert a bag is a subbag of another.\nAssert a bag is a superbag of another.\nAssert a command stderr string contains a given containee.\nAssert a command stderr string is equal to another.\nAssert a command stderr string is equal to an expression.\nAssert a command stderr string is equal to another.\nAssert a command stderr string is equal to an expression.\nAssert a command stderr string is equal to another.\nAssert a command stderr string is equal to an expression.\nAssert a command stderr string is a match to a regex.\nAssert a command stderr string is equal to another.\nAssert a command stderr string is equal to an expression.\nAssert a command stderr string is equal to another.\nAssert a command stderr string is equal to an expression.\nAssert a command stderr string is equal to another.\nAssert a command stderr string is equal to an expression.\nAssert a command stderr string contains a given containee.\nAssert a command stderr string is a match to a regex.\nAssert a command stdout string contains a given containee.\nAssert a command stdout string is equal to another.\nAssert a command stdout string is equal to an expression.\nAssert a command stdout string is equal to another.\nAssert a command stdout string is equal to an expression.\nAssert a command stdout string is equal to another.\nAssert a command stdout string is equal to an expression.\nAssert a command stdout string is a match to a regex.\nAssert a command stdout string is equal to another.\nAssert a command stdout string is equal to an expression.\nAssert a command stdout string is equal to another.\nAssert a command stdout string is equal to an expression.\nAssert a command stdout string is equal to another.\nAssert a command stdout string is equal to an expression.\nAssert a command stdout string contains a given containee.\nAssert a command stdout string is a match to a regex.\nAssert a container is a match for an expression.\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert an expression (such as a string) ends with an …\nAssert expression is Err.\nAssert two expressions are Err and their values are equal.\nAssert an expression is Err and its value is equal to an …\nAssert two expressions are Err and their values are not …\nAssert an expression is Err and its value is equal to an …\nAssert a function output is equal to another function …\nAssert a function output is equal to an expression.\nAssert a function error is equal to another.\nAssert a function error is equal to an expression.\nAssert a function error is greater than or equal to …\nAssert a function error is greater than or equal to an …\nAssert a function error is greater than another.\nAssert a function error is greater than an expression.\nAssert a function error is less than or equal to another.\nAssert a function error is less than or equal to an …\nAssert a function error is less than another.\nAssert a function error is less than an expression.\nAssert a function error is not equal to another.\nAssert a function error is not equal to an expression.\nAssert a function output is greater than or equal to …\nAssert a function output is greater than or equal to an …\nAssert a function output is greater than another.\nAssert a function output is greater than an expression.\nAssert a function output is less than or equal to another.\nAssert a function output is less than or equal to an …\nAssert a function output is less than another.\nAssert a function output is less than an expression.\nAssert a function output is not equal to another.\nAssert a function output is not equal to an expression.\nAssert a function Ok(…) is equal to another.\nAssert a function Ok(…) is equal to an expression.\nAssert a function Ok(…) is greater than or equal to …\nAssert a function Ok(…) is greater than or equal to an …\nAssert a function Ok(…) is greater than another.\nAssert a function Ok(…) is greater than an expression.\nAssert a function Ok(…) is less than or equal to another.\nAssert a function Ok(…) is less than or equal to an …\nAssert a function Ok(…) is less than another.\nAssert a function Ok(…) is less than an expression.\nAssert a function Ok(…) is not equal to another.\nAssert a function Ok(…) is not equal to an expression.\nAssert a ::std::fs::read_to_string(path) contains a …\nAssert a ::std::fs::read_to_string(path) value is equal to …\nAssert a ::std::fs::read_to_string(path) value is equal to …\nAssert a ::std::fs::read_to_string(path) value is greater …\nAssert zzz.\nAssert a ::std::fs::read_to_string(path) value is greater …\nAssert a ::std::fs::read_to_string(path) value is greater …\nAssert a ::std::fs::read_to_string(path) is a match to a …\nAssert a ::std::fs::read_to_string(path) value is less …\nAssert a ::std::fs::read_to_string(path) value is less …\nAssert a ::std::fs::read_to_string(path) value is less …\nAssert a ::std::fs::read_to_string(path) value is less …\nAssert a ::std::fs::read_to_string(path) is a match to a …\nAssert a ::std::fs::read_to_string(path) is not equal to …\nAssert a ::std::fs::read_to_string(path) is not equal to …\nAssert an expression is greater than or equal to another …\nAssert an expression is greater than another expression.\nAssert a number is within delta of another number.\nAssert a number is within epsilon of another number.\nAssert a infix operator, such as assert_infix!(a == b).\nAssert a ::std::io::Read read_to_string() contains a …\nAssert a ::std::io::Read read_to_string() value is equal …\nAssert a ::std::io::Read read_to_string() value is equal …\nAssert a ::std::io::Read read_to_string() value is greater …\nAssert zzz.\nAssert a ::std::io::Read read_to_string() value is greater …\nAssert a ::std::io::Read read_to_string() value is greater …\nAssert a ::std::io::Read read_to_string() is a match to a …\nAssert a ::std::io::Read read_to_string() value is less …\nAssert a ::std::io::Read read_to_string() value is less …\nAssert a ::std::io::Read read_to_string() value is less …\nAssert a ::std::io::Read read_to_string() value is less …\nAssert a ::std::io::read_to_string(path) is a match to a …\nAssert a ::std::io::Read read_to_string() is not equal to …\nAssert a ::std::io::Read read_to_string() is not equal to …\nAssert an expression (such as a string or array) is empty.\nAssert a matcher is a match for an expression.\nAssert an iterable is equal to another.\nAssert an iterable is greater than or equal to another.\nAssert an iterable is greater than another.\nAssert an iterable is less than or equal to another.\nAssert an iterable is less than another.\nAssert an iterable is not equal to another.\nAssert an expression is less than or equal to another …\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert an expression is less than another expression.\nAssert expression is Some.\nAssert expression is None.\nAssert an expression (such as a string) does not contain …\nAssert an expression (such as a string or array) is not …\nAssert an expression (such as a string) does not end with …\nAssert an expression (such as a regex) is not a match for …\nAssert expression is Some.\nAssert an expression (such as a string) does not start …\nAssert expression is Ok.\nAssert two expressions are Ok and their values are equal.\nAssert an expression is Ok and its value is equal to an …\nAssert two expressions are Ok and their values are not …\nAssert an expression is Ok and its value is equal to an …\nAssert expression is None.\nAssert expression is Some.\nAssert two expressions are Some and their values are equal.\nAssert two expressions are Some and their values are not …\nAssert an expression is Pending.\nAssert an expression is Pending.\nAssert poll.is_ready() is true.\nAssert two expressions are Ready(_) and their values are …\nAssert two expressions are Ready(_) and their values are …\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert a value is greater than an expression.\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert an expression is Ready.\nAssert two expressions are Ready and their values are …\nAssert an expression is Ready and its value is equal to an …\nAssert two expressions are Ready and their values are not …\nAssert an expression is Ready and its value is not equal …\nAssert expression is Err.\nAssert expression is Ok.\nAssert two expressions are Ok and their values are equal.\nAssert two expressions are Ok and their values are not …\nAssert a set is disjoint with another.\nAssert a set is equal to another.\nAssert a set is joint with another.\nAssert a set is not equal to another.\nAssert a set is a subset of another.\nAssert a set is a superset of another.\nAssert expression is Some.\nAssert two expressions are Some and their values are equal.\nAssert an expression is Some and its value is equal to an …\nAssert two expressions are Some and their values are not …\nAssert an expression is Some and its value is not equal to …\nAssert an expression (such as a string) starts with an …\nAssert an absolute difference is equal to a delta …\nAssert an absolute difference is greater than or equal to …\nAssert an absolute difference is greater than a delta …\nAssert an absolute difference is less than or equal to a …\nAssert an absolute difference is less than a delta …\nAssert an absolute difference is not equal to a delta …\nAssert a number is approximately equal to another number.\nAssert a number is approximately not equal to another …\nAssert a bag is equal to another.\nAssert a bag is not equal to another.\nAssert a bag is a subbag of another.\nAssert a bag is a superbag of another.\nAssert a command stderr string contains a given containee.\nAssert a command stderr string is equal to another.\nAssert a command stderr string is equal to an expression.\nAssert a command stderr string is equal to another.\nAssert a command stderr string is equal to an expression.\nAssert a command stderr string is equal to another.\nAssert a command stderr string is equal to an expression.\nAssert a command stderr string is a match to a regex.\nAssert a command stderr string is equal to another.\nAssert a command stderr string is equal to an expression.\nAssert a command stderr string is equal to another.\nAssert a command stderr string is equal to an expression.\nAssert a command stderr string is equal to another.\nAssert a command stderr string is equal to an expression.\nAssert a command stderr string contains a given containee.\nAssert a command stderr string is a match to a regex.\nAssert a command stdout string contains a given containee.\nAssert a command stdout string is equal to another.\nAssert a command stdout string is equal to an expression.\nAssert a command stdout string is equal to another.\nAssert a command stdout string is equal to an expression.\nAssert a command stdout string is equal to another.\nAssert a command stdout string is equal to an expression.\nAssert a command stdout string is a match to a regex.\nAssert a command stdout string is equal to another.\nAssert a command stdout string is equal to an expression.\nAssert a command stdout string is equal to another.\nAssert a command stdout string is equal to an expression.\nAssert a command stdout string is equal to another.\nAssert a command stdout string is equal to an expression.\nAssert a command stdout string contains a given containee.\nAssert a command stdout string is a match to a regex.\nAssert a container is a match for an expression.\nAssert an expression (such as a string) does not contain …\nAssert a count is equal to another count.\nAssert a count is equal to an expression.\nAssert a count is greater than or equal to another count.\nAssert a count is greater than or equal to an expression.\nAssert a count is greater than another count.\nAssert a count is greater than an expression.\nAssert a count is less than or equal to another count.\nAssert a count is less than or equal to an expression.\nAssert a count is less than another count.\nAssert a count is less than an expression.\nAssert a count is equal to another count.\nAssert a count is equal to an expression.\nAssert an expression (such as a string) ends with an …\nAssert an expression (such as a string) does not end with …\nAssert expression is Err.\nAssert two expressions are Err and their values are equal.\nAssert an expression is Err and its value is equal to an …\nAssert two expressions are Err and their values are not …\nAssert an expression is Err and its value is not equal to …\nAssert a function output is equal to another function …\nAssert a function output is equal to an expression.\nAssert a function output is greater than or equal to …\nAssert a function output is greater than or equal to an …\nAssert a function output is greater than another.\nAssert a function output is greater than an expression.\nAssert a function output is less than or equal to another.\nAssert a function output is less than or equal to an …\nAssert a function output is less than another.\nAssert a function output is less than an expression.\nAssert a function output is not equal to another.\nAssert a function output is not equal to an expression.\nAssert a function Err(…) is equal to another.\nAssert a function Err(…) is equal to an expression.\nAssert a function Err(…) is greater than or equal to …\nAssert a function Err(…) is greater than or equal to an …\nAssert a function Err(…) is greater than another.\nAssert a function Err(…) is greater than an expression.\nAssert a function Err(…) is less than or equal to …\nAssert a function Err(…) is less than or equal to an …\nAssert a function Err(…) is less than another.\nAssert a function Err(…) is less than an expression.\nAssert a function Err(…) is not equal to another.\nAssert a function Err(…) is not equal to an expression.\nAssert a function Ok(…) is equal to another.\nAssert a function Ok(…) is equal to an expression.\nAssert a function Ok(…) is greater than or equal to …\nAssert a function Ok(…) is greater than or equal to an …\nAssert a function Ok(…) is greater than another.\nAssert a function Ok(…) is greater than an expression.\nAssert a function Ok(…) is less than or equal to another.\nAssert a function Ok(…) is less than or equal to an …\nAssert a function Ok(…) is less than another.\nAssert a function Ok(…) is less than an expression.\nAssert a function Ok(…) is not equal to another.\nAssert a function Ok(…) is not equal to an expression.\nAssert a ::std::fs::read_to_string(path) contains a …\nAssert a ::std::fs::read_to_string(path) value is equal to …\nAssert a ::std::fs::read_to_string(path) value is equal to …\nAssert a ::std::fs::read_to_string(path) value is greater …\nAssert a ::std::fs::read_to_string(path) value is greater …\nAssert a ::std::fs::read_to_string(path) value is greater …\nAssert a ::std::fs::read_to_string(path) value is greater …\nAssert a ::std::fs::read_to_string(path) is a match to a …\nAssert a ::std::fs::read_to_string(path) value is less …\nAssert a ::std::fs::read_to_string(path) value is less …\nAssert a ::std::fs::read_to_string(path) value is less …\nAssert a ::std::fs::read_to_string(path) value is less …\nAssert a ::std::fs::read_to_string(path) is a match to a …\nAssert a ::std::fs::read_to_string(path) is not equal to …\nAssert a ::std::fs::read_to_string(path) is not equal to …\nAssert a number is within delta of another number.\nAssert a number is within epsilon of another number.\nAssert a ::std::io::Read read_to_string() contains a …\nAssert a ::std::io::Read read_to_string() value is equal …\nAssert a ::std::io::Read read_to_string() value is equal …\nAssert a ::std::io::Read read_to_string() value is greater …\nAssert a ::std::io::Read read_to_string() value is greater …\nAssert a ::std::io::Read read_to_string() value is greater …\nAssert a ::std::io::Read read_to_string() value is greater …\nAssert a ::std::io::Read read_to_string() is a match to a …\nAssert a ::std::io::Read read_to_string() value is less …\nAssert a ::std::io::Read read_to_string() value is less …\nAssert a ::std::io::Read read_to_string() value is less …\nAssert a ::std::io::Read read_to_string() value is less …\nAssert a ::std::io::read_to_string(path) is a match to a …\nAssert a ::std::io::Read read_to_string() is not equal to …\nAssert a ::std::io::Read read_to_string() is not equal to …\nAssert an expression (such as a string or array) is empty.\nAssert an expression (such as a string or array) is not …\nAssert a matcher is a match for an expression.\nAssert an expression (such as a regex) is not a match for …\nAssert an iter is equal to another.\nAssert an iter is greater than or equal to another.\nAssert an iter is greater than another.\nAssert an iter is less than or equal to another.\nAssert an iter is less than another.\nAssert an iter is not equal to another.\nAssert a length is equal to another length.\nAssert a length is equal to an expression.\nAssert a length is greater than or equal to another length.\nAssert a length is greater than or equal to an expression.\nAssert a length is greater than another length.\nAssert a length is greater than an expression.\nAssert a length is less than or equal to another length.\nAssert a length is less than or equal to an expression.\nAssert a length is less than another length.\nAssert a length is less than an expression.\nAssert a length is equal to another length.\nAssert a length is equal to an expression.\nAssert expression matches a case.\nAssert expression matches a case.\nAssert expression is None.\nAssert expression is Ok.\nAssert two expressions are Ok and their values are equal.\nAssert an expression is Ok and its value is equal to an …\nAssert two expressions are Ok and their values are not …\nAssert an expression is Ok and its value is not equal to …\nAssert expression is None.\nAssert expression is Some.\nAssert two expressions are Some and their values are equal.\nAssert two expressions are Some and their values are not …\nAssert an expression is Pending.\nAssert an expression is Pending.\nAssert an expression is Ready.\nAssert two expressions are Ready(_) and their values are …\nAssert two expressions are Ready(_) and their values are …\nAssert a process status code value is equal to another.\nAssert a process status code value is equal to an …\nAssert a process status code value is greater than or …\nAssert a process status code value is greater than or …\nAssert a process status code value is greater than another.\nAssert a process status code value is greater than an …\nAssert a process status code value is less than or equal …\nAssert a process status code value is less than or equal …\nAssert a process status code value is less than another.\nAssert a process status code value is less than an …\nAssert a process status code value is not equal to another.\nAssert a process status code value is equal to another.\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stderr …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert a command (built with program and args) stdout …\nAssert an expression is Ready.\nAssert two expressions are Ready and their values are …\nAssert an expression is Ready and its value is equal to an …\nAssert two expressions are Ready and their values are not …\nAssert an expression is Ready and its value is not equal …\nAssert expression is Err.\nAssert expression is Ok.\nAssert two expressions are Ok and their values are equal.\nAssert two expressions are Ok and their values are not …\nAssert a set is disjoint with another.\nAssert a set is equal to another.\nAssert a set is joint with another.\nAssert a set is not equal to another.\nAssert a set is a subset of another.\nAssert a set is a superset of another.\nAssert expression is Some.\nAssert two expressions are Some and their values are equal.\nAssert an expression is Some and its value is equal to an …\nAssert two expressions are Some and their values are not …\nAssert an expression is Some and its value is not equal to …\nAssert an expression (such as a string) does not start …\nAssert an expression (such as a string) starts with an …")